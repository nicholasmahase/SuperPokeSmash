{"ast":null,"code":"import _classCallCheck from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/src/components/player/player.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { playerType } from '../../';\nimport Attacks from '../attacks/attacks';\nimport Life from '../life/life';\nimport Actions from '../actions/actions';\nimport { connect } from 'react-redux';\nimport './player.css';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    onAttack: state.battle.onAttack,\n    url: state.api.selected.url\n  };\n};\n\nvar Player =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Player, _React$Component);\n\n  function Player() {\n    _classCallCheck(this, Player);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Player).apply(this, arguments));\n  }\n\n  _createClass(Player, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var attacking = this.props.onAttack ? React.createElement(\"div\", {\n        className: \"attacking bg-danger\",\n        title: this.props.player.name + ' is attacking',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"On attack! \", React.createElement(\"i\", {\n        className: \"fa fa-bolt\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })) : false;\n\n      var condition = function () {\n        if (_this.props.isCpu === undefined) {\n          return {\n            style: 'thumbnail with-hover'\n          };\n        }\n\n        var percentage = 100 * _this.props.player.currentHealth / _this.props.player.health;\n\n        if (percentage < 26) {\n          return {\n            style: 'thumbnail danger',\n            title: _this.props.player.name + ' is about to die'\n          };\n        }\n\n        if (percentage < 51) {\n          return {\n            style: 'thumbnail warning',\n            title: _this.props.player.name + ' doesn`t have too much health left'\n          };\n        }\n\n        return {\n          style: 'thumbnail',\n          title: _this.props.player.name + ' is in a good condition'\n        };\n      }();\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: condition.style,\n        title: condition.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, attacking, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.player.name), React.createElement(Life, {\n        isCpu: this.props.isCpu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label label-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Health: \", this.props.player.health), React.createElement(\"span\", {\n        className: \"label label-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Agility: \", this.props.player.agility), React.createElement(\"span\", {\n        className: \"label label-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Defense: \", this.props.player.defense))), React.createElement(\"div\", {\n        className: \"container-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.url + this.props.player.avatar,\n        alt: \"player avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(Attacks, {\n        isCpu: this.props.isCpu,\n        attacks: this.props.isCpu === undefined ? this.props.player.attacks : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(Actions, {\n        isCpu: this.props.isCpu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Player;\n}(React.Component);\n\nPlayer.propTypes = {\n  player: playerType.isRequired,\n  isCpu: PropTypes.bool\n};\nexport default connect(mapStateToProps)(Player);","map":{"version":3,"sources":["/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/src/components/player/player.js"],"names":["React","PropTypes","playerType","Attacks","Life","Actions","connect","mapStateToProps","state","onAttack","battle","url","api","selected","Player","attacking","props","player","name","condition","isCpu","undefined","style","percentage","currentHealth","health","title","agility","defense","avatar","attacks","Component","propTypes","isRequired","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {playerType} from '../../';\nimport Attacks from '../attacks/attacks';\nimport Life from '../life/life';\nimport Actions from '../actions/actions';\nimport {connect} from 'react-redux';\n\nimport './player.css';\n\nconst mapStateToProps = (state) => ({ onAttack: state.battle.onAttack, url: state.api.selected.url });\n\nclass Player extends React.Component { \n\n\trender() {\n\n    let attacking = this.props.onAttack ? (<div className=\"attacking bg-danger\" title={this.props.player.name + ' is attacking'}>\n      On attack! <i className=\"fa fa-bolt\" aria-hidden=\"true\"></i>\n    </div>) : false; \n\n    let condition = (() => {\n      if (this.props.isCpu===undefined) { return { style: 'thumbnail with-hover' } }\n\n      let percentage = ((100*this.props.player.currentHealth)/this.props.player.health);\n\n      if (percentage < 26) {  return { style: 'thumbnail danger', title: this.props.player.name + ' is about to die'  } }\n\n      if (percentage < 51) {  return { style: 'thumbnail warning', title: this.props.player.name + ' doesn`t have too much health left'  } }\n\n      return { style: 'thumbnail', title: this.props.player.name + ' is in a good condition'  }   \n    })();\n\n\t\treturn (\n    <div>\n       <div className={condition.style} title={condition.title}>\n          <div className=\"title\">\n             {attacking}\n             <h3>{this.props.player.name}</h3>\n             <Life isCpu={this.props.isCpu} />\n             <p>\n                <span className=\"label label-primary\">Health: {this.props.player.health}</span>\n                <span className=\"label label-success\">Agility: {this.props.player.agility}</span>\n                <span className=\"label label-info\">Defense: {this.props.player.defense}</span>\n             </p>\n          </div>\n          <div className=\"container-image\">\n             <img src={this.props.url+this.props.player.avatar} alt=\"player avatar\" />\n          </div>\n          <Attacks isCpu={this.props.isCpu} attacks={this.props.isCpu === undefined ? this.props.player.attacks : undefined} />\n       </div>\n       <Actions isCpu={this.props.isCpu} />\n    </div>);\n\t}\n}\n\nPlayer.propTypes = {\n  player: playerType.isRequired,\n  isCpu: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps)(Player);\n\n\n\n"]},"metadata":{},"sourceType":"module"}