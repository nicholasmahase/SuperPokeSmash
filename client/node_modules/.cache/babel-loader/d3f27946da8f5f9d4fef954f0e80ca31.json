{"ast":null,"code":"/* import React from \"react\";\nimport Header from '../../components/header/header'\nimport PlayerBattle from '../../components/playerBattle/playerBattle'\nimport EndFight from '../../components/endFight/endFight'\nimport ApiChange from '../../components/apiChange/apiChange'\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {battle} from '../../actions/playerActions'\n\nconst mapStateToProps = (state, ownProps) => ({ \n\tbattle: state.battle, \n\turl: state.api.selected.url,\n\tselected: ownProps.match.params \n});\n\nclass Battle extends React.Component {\n\n\tcomponentDidMount() {\n\t\taxios.post(`${this.props.url}/select`, this.props.selected).then(response => { \n\t\t\tthis.props.dispatch(battle({ \n\t\t\t\tplayer: response.data.player, \n\t\t\t\tagainst: response.data.against \n\t\t\t}));\n\t\t});\n  \t}\n\n\trender() {\n\t\tconst player = this.props.battle.player; \n\t\tconst against = this.props.battle.against;\n\t\tlet status = player.currentHealth <= 0 || against.currentHealth <= 0;\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{status ? \n\t\t\t\t\t<Header><small>{'End of battle'}</small><ApiChange/></Header> \n\t\t\t\t: \n\t\t\t\t\t<Header><small>{player.name}</small> X <small>{against.name}</small><ApiChange/></Header>\n\t\t\t\t}\n\n\t\t\t\t{status ? <EndFight /> : <PlayerBattle />}\n\t        </div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps)(Battle);\n\n*/\n\n/* $(document).ready(function () {\n\n  /////////////////////////////////////////////\n  // CONTENTS\n  /////////////////////////////////////////////\n  // VARIABLES\n  // UTILITIES\n    // RANDOM NUMBER GENERATOR\n    // CHARACTER BUILD\n    // ATTACK MULTIPLIER\n    // SFX PLAYER\n    // HP BAR ANIMATION\n  // RESET\n  // CHARACTER CHOICE\n  // HERO ATTACK\n  // ENEMY ATTACK\n  // ATTACK SEQUENCE\n  // MODAL CONTROLS\n  \n  \n  /////////////////////////////////////////////\n  // VARIABLES\n  /////////////////////////////////////////////\n  var music = {},\n      typeSprite = '',\n      types = [],\n      gameData = {}\n      attackName = '',\n      curAttack = {},\n      randInt = 0,\n      enemyAttack = {},\n      characters = [],\n      defendProgressInt = null,\n      defendProgressComplete = 0,\n      progressInt = null,\n      progressComplete = 0;\n  \n  function buildVars(){\n    // all the music for the game\n    // http://downloads.khinsider.com/game-soundtracks/album/pokemon-gameboy-sound-collection\n    music = {\n      opening: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/aipycrsoym/101-opening.mp3\",\n      battle: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/fllwdebjsg/107-battle-vs-wild-pokemon-.mp3\",\n      victory: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/csqodhnibz/108-victory-vs-wild-pokemon-.mp3\",\n      pikachu: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/hpjacpzwof/170-pikachu.mp3\",\n      charmander: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/wfwdwleyga/149-charmander.mp3\",\n      squirtle: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/soagplijvq/152-squirtle.mp3\",\n      bulbasaur: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/gvqmhhryki/146-bulbasaur.mp3\",\n      machop: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/viaskmobgb/213-machop.mp3\"\n    }\n  \n  \n  \n    typeSprite = 'http://orig15.deviantart.net/24d8/f/2011/057/3/5/ge___energy_type_icons_by_aschefield101-d3agp02.png';\n    types = ['bug', 'dark', 'dragon', 'electric', 'fairy', 'fighting', 'fire', 'flying', 'ghost', 'grass', 'ground', 'ice', 'normal', 'poison', 'psychic', 'rock', 'steel', 'water'];\n  \n  \n  \n    // the data for the game in play\n    gameData = {\n      step: 1,\n      hero: {},\n      enemy: {}\n    }\n  \n  \n  \n    // attack variables\n    attackName = '';\n    curAttack = {};\n    randInt = 0;\n    enemyAttack = {};\n    defendProgressInt = null;\n    defendProgressComplete = 0;\n    progressInt = null;\n    progressComplete = 0;\n  \n  \n  \n    // available characters\n    characters = [\n      {\n        name: \"pikachu\",\n        type: 'electric',\n        weakness: ['fighting'],\n        resistance: ['steel'],\n        img: {\n          default: \"http://vignette2.wikia.nocookie.net/all-anime-characters/images/7/7b/Cute_pikachu_with_hat_by_mlpochea-d63xlom.png/revision/latest?cb=20150108111832\",\n          front: \"http://rs1263.pbsrc.com/albums/ii631/Pokemon-Vampire-Knight-lover/pikachu_.gif~c200\",\n          back: \"http://vignette4.wikia.nocookie.net/pokemon/images/5/5b/Pikachu_Back_XY.gif/revision/latest?cb=20141009080948\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"thunder jolt\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"electro ball\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"volt tackle\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"thunder crack\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"charmander\",\n        type: 'fire',\n        weakness: ['water'],\n        resistance: ['grass'],\n        img: {\n          default: \"http://img3.wikia.nocookie.net/__cb20150330015216/pokemon/images/f/f5/004Charmander_Pokemon_Mystery_Dungeon_Explorers_of_Sky.png\",\n          front: \"http://rs772.pbsrc.com/albums/yy9/HybridRainbow88/Charmander.gif~c200\",\n          back: \"http://vignette1.wikia.nocookie.net/pokemon/images/2/23/Charmander_Back_XY.gif/revision/latest?cb=20141009063457\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"ember\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"flamethrower\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"burning tail\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"fire spin\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"squirtle\",\n        type: 'water',\n        weakness: ['electric','grass'],\n        resistance: ['normal','fire'],\n        img: {\n          default: \"http://vignette3.wikia.nocookie.net/ssbb/images/7/79/Squirtle_Rojo_Fuego_y_Verde_Hoja.png/revision/latest?cb=20130907041944&path-prefix=es\",\n          front: \"https://66.media.tumblr.com/ddd22fe10a485ed56a46d958c058a970/tumblr_n9lnpepqkW1scncwdo1_500.gif\",\n          back: \"http://vignette3.wikia.nocookie.net/pokemon/images/d/d8/Squirtle_XY_Back_Sprite.gif/revision/latest?cb=20141031154426\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"bubble\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"water gun\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"shell attack\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"hydro pump\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"bulbasaur\",\n        type: 'grass',\n        weakness: ['fire'],\n        resistance: ['water','psychic'],\n        img: {\n          default: \"http://vignette4.wikia.nocookie.net/pokemon/images/8/81/001Bulbasaur_Pokemon_Mystery_Dungeon_Explorers_of_Sky.png/revision/latest?cb=20150105223818\",\n          front: \"https://media.giphy.com/media/iIWW4BM6nNWTu/giphy.gif\",\n          back: \"http://rs425.pbsrc.com/albums/pp335/Grasaldrea/ShinyBulbasauranimatedback.gif~c200\",\n          deranged: \"http://rs522.pbsrc.com/albums/w348/Richtoon18/b3617568f13aa750c57eacc45d0b2da7.gif~c200\",\n          sleep: \"https://31.media.tumblr.com/4dd7682db26ac687ef81f0dd06794652/tumblr_msesq5uAIk1r93jsro1_500.gif\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"tackle\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"vine whip\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"razor leaf\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"solar beam\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"machop\",\n        type: 'fighting',\n        weakness: ['psychic','electric'],\n        resistance: [],\n        img: {\n          default: \"http://clipart.toonarific.com/data/media/11/pokemon066.gif\",\n          front: \"http://graphics.tppcrpg.net/xy/normal/066F.gif\",\n          back:  \"http://pokeunlock.com/wp-content/uploads/2015/01/machop-2.gif\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"low kick\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"karate chop\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"seismic toss\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"hundred furious punches\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      }\n    ];\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // UTILITY\n  /////////////////////////////////////////////\n  // RANDOM NUMBER GENERATOR\n  // min is optional\n  function randomNum(max, min){\n    // generate a random number\n  \n    // min not required\n    if(min === undefined || min === '' || min === null){\n      // min default value\n      min = 0;\n    }\n  \n    // random number, yay\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  \n  \n  \n  // CHARACTER BUILD\n  // build the character UI\n  function populateChar(container,character){\n    // which img\n    var facing = 'front';\n    if(character === 'hero'){\n      // we see the back of our hero\n      // a real hero faces danger\n      facing = 'back';\n    }\n  \n    // build the character\n    container.append('<section class=\"char\"><img src=\"'+gameData[character].img[facing]+'\" alt=\"'+gameData[character].name+'\"><aside class=\"data\"><h2>'+gameData[character].name+'</h2><div><progress max=\"'+gameData[character].hp.total+'\"></progress><p><span>'+gameData[character].hp.current+'</span>/'+gameData[character].hp.total+'</p></div></aside></section>');\n  }\n  \n  \n  \n  // ATTACK MULTIPLIER\n  // modify attack value for weaknesses & strengths\n  function attackMultiplier(attacker, curAttack){\n    var defender = 'enemy';\n    if(attacker === 'enemy'){\n      defender = 'hero';\n    }\n  \n    if(gameData[defender].weakness.indexOf(gameData[attacker].type) >= 0){\n      // weakness exists\n      curAttack.hp *= 2;\n    }\n  \n    if(gameData[defender].resistance.indexOf(gameData[attacker].type) >= 0){\n      // weakness exists\n      curAttack.hp /= 2;\n    }\n  \n    curAttack.hp = Math.floor(curAttack.hp);\n    return curAttack.hp;\n  }\n  \n  \n  \n  // SFX PLAYER\n  // stops music and plays sfx\n  function playSound(name){\n    // load sfx src\n    $('audio.sfx').attr('src', music[name])\n    // pause game music\n    $('audio.music')[0].pause();\n    // character announce yourself\n    $('audio.sfx')[0].play();\n  \n    // timeout to stop music at given point\n    setTimeout(function(){\n      // pause the sfx\n      $('audio.sfx')[0].pause();\n      // start the music again\n      $('audio.music')[0].play();\n      // reset the sfx\n      $('audio.sfx')[0].currentTime = 0;\n    },2000);\n  }\n  \n  \n  // HP BAR ANIMATION\n  // stop and set health bar\n  function setHP(){\n    // stop health animation and set value\n    clearInterval(defendProgressInt);\n    clearInterval(progressInt);\n    $('.stadium .enemy progress').val(gameData.enemy.hp.current);\n    $('.stadium .hero progress').val(gameData.hero.hp.current);\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // RESET\n  /////////////////////////////////////////////\n  function resetGame(){\n    // set default values for game variables\n    buildVars();\n  \n    // clear the stadium\n    $('.hero').empty();\n    $('.enemy').empty();\n  \n    // reset\n    $('.attack-list li').unbind('click');\n    $('.attack-list').empty();\n    $('.stadium .enemy').css({'padding':'0'});\n    $('.instructions p').text('Choose your hero');\n  \n    // set & start the opening game music\n    $('audio.music').attr('src',music[\"opening\"]);\n    $('audio.music')[0].play();\n  \n    // empty characters\n    $('.characters').empty();\n    $('.characters').removeClass('hidden');\n  \n    for(var i in characters){\n      // build the character list\n      $(\".characters\").append('<div class=\"char-container\"><img src=\"'+characters[i].img.default+'\" alt=\"'+characters[i].name+'\"><h2>'+characters[i].name+'</h2><span class=\"type '+characters[i].type+'\"></span></div>')\n    }\n    characterChoice();\n  }\n  resetGame();\n  $('.logo').click(function(){resetGame();});\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // CHARACTER CHOICE\n  /////////////////////////////////////////////\n  function characterChoice(){\n    $('.characters .char-container').click(function(){\n      // you have chosen a character\n  \n      // your chosen character name\n      var name = $(this).children('h2').text().toLowerCase();\n  \n      switch(gameData.step){\n        // switch for the current step in the game\n  \n        case 1:\n          // step 1: choose your hero\n          for(var i in characters){\n            if(characters[i].name === name){\n              // find and save your chosen hero's data\n              gameData.hero = characters[i];\n            }\n          }\n  \n          // remove the character from the available list\n          var char = $(this).remove();\n          // build my hero\n          populateChar($('.stadium .hero'), 'hero');\n  \n          for(var i in gameData.hero.attacks){\n            // populate attack list\n            $('.attack-list').append('<li><p class=\"attack-name\"><strong>'+gameData.hero.attacks[i].name+'</strong></p><p class=\"attack-count\"><small><span>'+gameData.hero.attacks[i].avail.remaining+'</span>/'+gameData.hero.attacks[i].avail.total+'</small></p></li>');\n          }\n  \n          $('.attack-list').addClass('disabled');\n  \n          // update instructions\n          $('.instructions p').text('Choose your enemy');\n          // set health bar value\n          $('.stadium .hero progress').val(gameData.hero.hp.current);\n  \n          // let your hero roar\n          playSound(name);\n  \n          // move on to choosing an enemy\n          gameData.step = 2;\n          break;\n  \n        case 2:\n          // step 2: choose your enemy\n          for(var i in characters){\n            if(characters[i].name === name){\n              // find and save the enemy data\n              gameData.enemy = characters[i];\n            }\n          }\n  \n          // remove the enemy from the list\n          var char = $(this).remove();\n          // build the enemy\n          populateChar($('.stadium .enemy'), 'enemy');\n          // pad the stadium - give them some breathing room\n          $('.stadium .enemy').css({'padding':'25px 0'});\n  \n          // update instructions\n          $('.instructions p').text('Fight!!!');\n  \n          // hide the hero list\n          $('.characters').children().slideUp('500', function(){\n            $('.characters').addClass('hidden');\n          });\n  \n          // update enemy health bar value\n          $('.stadium .enemy progress').val(gameData.enemy.hp.current);\n  \n          // the enemy whimpers in fear\n          playSound(name);\n  \n          // update step to attack phase and bind click events\n          gameData.step = 3;\n          attackList();\n          break;\n      }\n    });\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // HERO ATTACK\n  /////////////////////////////////////////////\n  function attackEnemy(that, callback){\n    // attack the enemy!!!\n  \n    // name of your attack\n    attackName = that.children('.attack-name').children('strong').text().toLowerCase();\n  \n    for(var i in gameData.hero.attacks){\n      if(gameData.hero.attacks[i].name === attackName){\n        // get chosen attack data\n        curAttack = gameData.hero.attacks[i];\n      }\n    }\n  \n    // if there are attacks left\n    if(curAttack.avail.remaining > 0){\n      // attack!!!\n      $('.attack-list').addClass('disabled');\n  \n      $('.hero .char img').animate(\n        {\n          'margin-left': '-30px',\n          'margin-top': '10px'\n        },\n        50,\n        'swing'\n      );\n      $('.hero .char img').animate(\n        {\n          'margin-left': '30px',\n          'margin-top': '-10px'\n        },\n        50,\n        'swing'\n      );\n      $('.hero .char img').animate(\n        {\n          'margin-left': '0px',\n          'margin-top': '0px'\n        },\n        50,\n        'swing'\n      );\n  \n      // attack enemy\n      gameData.enemy.hp.current -= attackMultiplier('hero', curAttack);\n  \n      if(gameData.enemy.hp.current <= 0){\n        // Enemy is dead\n  \n        clearModal();\n      $('.modal-in header').append('<h1>You Enemy is slain</h1><span class=\"close\">x</span>');\n      $('.modal-in section').append('<p>Congratulations! Dare you try again?');\n      $('.modal-out').slideDown('400');\n        modalControls();\n  \n        gameData.enemy.hp.current = 0;\n        // clear the stadium of the dead\n        $('.enemy').empty();\n        // show the available characters\n        $('.characters').removeClass('hidden');\n        $('.characters').children().slideDown('500');\n  \n        gameData.enemy = {};\n  \n        // choose enemy\n        gameData.step = 2;\n        // unbind click for reset\n        $('.attack-list li').unbind('click');\n      }else{\n        // enemy is still alive (Attack!!!)\n  \n        // subtract attack\n        curAttack.avail.remaining--;\n  \n        // interval to animate health bar\n        progressInt = setInterval(function(){\n          // get current value of health bar\n          var val = $('.stadium .enemy progress').val();\n          val--;\n  \n          // update health bar value\n          $('.stadium .enemy progress').val(val);\n  \n          if(val === gameData.enemy.hp.current){\n            // if you've hit your target clear interval\n            clearInterval(progressInt);\n            progressComplete = 1;\n          }\n        },1);\n  \n        // update health numbers\n        $('.stadium .enemy .data p span').text(gameData.enemy.hp.current);\n        that.children('.attack-count').children('small').children('span').text(curAttack.avail.remaining);\n  \n        // wait a second to recover\n        setTimeout(function(){\n          // now defend that attack\n          defend(that);\n        }, 1000);\n      }\n    }\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // ENEMY ATTACK (DEFEND)\n  /////////////////////////////////////////////\n  function defend(that){\n    // random attack\n    randInt = randomNum(gameData.enemy.attacks.length);\n    enemyAttack = gameData.enemy.attacks[randInt];\n  \n    // enemy attack animation sequence\n    $('.enemy .char img').animate(\n      {\n        'margin-right': '-30px',\n        'margin-top': '-10px'\n      },\n      50,\n      'swing'\n    );\n    $('.enemy .char img').animate(\n      {\n        'margin-right': '30px',\n        'margin-top': '10px'\n      },\n      50,\n      'swing'\n    );\n    $('.enemy .char img').animate(\n      {\n        'margin-right': '0px',\n        'margin-top': '0px'\n      },\n      50,\n      'swing'\n    );\n  \n    // attack the hero\n    gameData.hero.hp.current -= attackMultiplier('enemy', enemyAttack);\n  \n    if(gameData.hero.hp.current <= 0){\n      // ding dong the hero's dead\n  \n      clearModal();\n      $('.modal-in header').append('<h1>Your Hero has died</h1><span class=\"close\">x</span>');\n      $('.modal-in section').append('<p>You lose, good day!');\n      $('.modal-out').slideDown('400');\n      modalControls()\n  \n      gameData.hero.hp.current = 0;\n  \n      resetGame();\n    }else{\n      // the hero lives\n  \n      // subtract attack from enemy count\n      gameData.enemy.attacks[randInt].avail.remaining--;\n  \n      // health bar animation\n      defendProgressInt = setInterval(function(){\n        // get current val of health bar\n        var val = $('.stadium .hero progress').val();\n        val--;\n  \n        // update health bar value\n        $('.stadium .hero progress').val(val);\n  \n        if(val === gameData.hero.hp.current){\n          // stop the interval when target is attained\n          clearInterval(defendProgressInt);\n          defendProgressComplete = 1;\n        }\n      },1);\n  \n      // update health value\n      $('.stadium .hero .data p span').text(gameData.hero.hp.current);\n  \n      setTimeout(function(){\n        if(defendProgressComplete && progressComplete){\n          $('.attack-list').removeClass('disabled');\n        }else{\n          setHP();\n          $('.attack-list').removeClass('disabled');\n        }\n      }, 500);\n    }\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // ATTACK SEQUENCE\n  /////////////////////////////////////////////\n  function attackList(){\n    // attack instantiation\n    $('.attack-list').removeClass('disabled');\n  \n    $('.attack-list li').click(function(){\n      // attack choice is clicked\n      var doAttack = 1;\n  \n      if(gameData.step === 3){\n        // attack step - start attack sequence\n        attackEnemy($(this));\n      }\n    });\n  \n    setTimeout(function(){\n      // characters chosen - set & start the battle music\n      $('audio.music').attr('src',music[\"battle\"]);\n      $('audio.music')[0].play();\n    },1500);\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // MODAL\n  /////////////////////////////////////////////\n  function modalControls(){\n    $('.modal-out').click(function(){\n      $(this).slideUp('400');\n    });\n    $('.modal-in .close').click(function(e){\n      $('.modal-out').slideUp('400');\n    });\n  \n    $('.modal-in').click(function(e){\n      e.stopPropagation();\n      e.preventDefault();\n    });\n  }\n  \n  function clearModal(){\n    $('.modal-in header').empty();\n    $('.modal-in section').empty();\n    $('.modal-in footer').empty();\n    setHP();\n  }\n  });\n*/","map":{"version":3,"sources":["/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/client/src/Pages/battle/battle.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA","sourcesContent":["/* import React from \"react\";\nimport Header from '../../components/header/header'\nimport PlayerBattle from '../../components/playerBattle/playerBattle'\nimport EndFight from '../../components/endFight/endFight'\nimport ApiChange from '../../components/apiChange/apiChange'\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {battle} from '../../actions/playerActions'\n\nconst mapStateToProps = (state, ownProps) => ({ \n\tbattle: state.battle, \n\turl: state.api.selected.url,\n\tselected: ownProps.match.params \n});\n\nclass Battle extends React.Component {\n\n\tcomponentDidMount() {\n\t\taxios.post(`${this.props.url}/select`, this.props.selected).then(response => { \n\t\t\tthis.props.dispatch(battle({ \n\t\t\t\tplayer: response.data.player, \n\t\t\t\tagainst: response.data.against \n\t\t\t}));\n\t\t});\n  \t}\n\n\trender() {\n\t\tconst player = this.props.battle.player; \n\t\tconst against = this.props.battle.against;\n\t\tlet status = player.currentHealth <= 0 || against.currentHealth <= 0;\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{status ? \n\t\t\t\t\t<Header><small>{'End of battle'}</small><ApiChange/></Header> \n\t\t\t\t: \n\t\t\t\t\t<Header><small>{player.name}</small> X <small>{against.name}</small><ApiChange/></Header>\n\t\t\t\t}\n\n\t\t\t\t{status ? <EndFight /> : <PlayerBattle />}\n\t        </div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps)(Battle);\n\n*/\n\n/* $(document).ready(function () {\n\n  /////////////////////////////////////////////\n  // CONTENTS\n  /////////////////////////////////////////////\n  // VARIABLES\n  // UTILITIES\n    // RANDOM NUMBER GENERATOR\n    // CHARACTER BUILD\n    // ATTACK MULTIPLIER\n    // SFX PLAYER\n    // HP BAR ANIMATION\n  // RESET\n  // CHARACTER CHOICE\n  // HERO ATTACK\n  // ENEMY ATTACK\n  // ATTACK SEQUENCE\n  // MODAL CONTROLS\n  \n  \n  /////////////////////////////////////////////\n  // VARIABLES\n  /////////////////////////////////////////////\n  var music = {},\n      typeSprite = '',\n      types = [],\n      gameData = {}\n      attackName = '',\n      curAttack = {},\n      randInt = 0,\n      enemyAttack = {},\n      characters = [],\n      defendProgressInt = null,\n      defendProgressComplete = 0,\n      progressInt = null,\n      progressComplete = 0;\n  \n  function buildVars(){\n    // all the music for the game\n    // http://downloads.khinsider.com/game-soundtracks/album/pokemon-gameboy-sound-collection\n    music = {\n      opening: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/aipycrsoym/101-opening.mp3\",\n      battle: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/fllwdebjsg/107-battle-vs-wild-pokemon-.mp3\",\n      victory: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/csqodhnibz/108-victory-vs-wild-pokemon-.mp3\",\n      pikachu: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/hpjacpzwof/170-pikachu.mp3\",\n      charmander: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/wfwdwleyga/149-charmander.mp3\",\n      squirtle: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/soagplijvq/152-squirtle.mp3\",\n      bulbasaur: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/gvqmhhryki/146-bulbasaur.mp3\",\n      machop: \"http://66.90.91.26/ost/pokemon-gameboy-sound-collection/viaskmobgb/213-machop.mp3\"\n    }\n  \n  \n  \n    typeSprite = 'http://orig15.deviantart.net/24d8/f/2011/057/3/5/ge___energy_type_icons_by_aschefield101-d3agp02.png';\n    types = ['bug', 'dark', 'dragon', 'electric', 'fairy', 'fighting', 'fire', 'flying', 'ghost', 'grass', 'ground', 'ice', 'normal', 'poison', 'psychic', 'rock', 'steel', 'water'];\n  \n  \n  \n    // the data for the game in play\n    gameData = {\n      step: 1,\n      hero: {},\n      enemy: {}\n    }\n  \n  \n  \n    // attack variables\n    attackName = '';\n    curAttack = {};\n    randInt = 0;\n    enemyAttack = {};\n    defendProgressInt = null;\n    defendProgressComplete = 0;\n    progressInt = null;\n    progressComplete = 0;\n  \n  \n  \n    // available characters\n    characters = [\n      {\n        name: \"pikachu\",\n        type: 'electric',\n        weakness: ['fighting'],\n        resistance: ['steel'],\n        img: {\n          default: \"http://vignette2.wikia.nocookie.net/all-anime-characters/images/7/7b/Cute_pikachu_with_hat_by_mlpochea-d63xlom.png/revision/latest?cb=20150108111832\",\n          front: \"http://rs1263.pbsrc.com/albums/ii631/Pokemon-Vampire-Knight-lover/pikachu_.gif~c200\",\n          back: \"http://vignette4.wikia.nocookie.net/pokemon/images/5/5b/Pikachu_Back_XY.gif/revision/latest?cb=20141009080948\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"thunder jolt\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"electro ball\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"volt tackle\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"thunder crack\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"charmander\",\n        type: 'fire',\n        weakness: ['water'],\n        resistance: ['grass'],\n        img: {\n          default: \"http://img3.wikia.nocookie.net/__cb20150330015216/pokemon/images/f/f5/004Charmander_Pokemon_Mystery_Dungeon_Explorers_of_Sky.png\",\n          front: \"http://rs772.pbsrc.com/albums/yy9/HybridRainbow88/Charmander.gif~c200\",\n          back: \"http://vignette1.wikia.nocookie.net/pokemon/images/2/23/Charmander_Back_XY.gif/revision/latest?cb=20141009063457\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"ember\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"flamethrower\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"burning tail\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"fire spin\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"squirtle\",\n        type: 'water',\n        weakness: ['electric','grass'],\n        resistance: ['normal','fire'],\n        img: {\n          default: \"http://vignette3.wikia.nocookie.net/ssbb/images/7/79/Squirtle_Rojo_Fuego_y_Verde_Hoja.png/revision/latest?cb=20130907041944&path-prefix=es\",\n          front: \"https://66.media.tumblr.com/ddd22fe10a485ed56a46d958c058a970/tumblr_n9lnpepqkW1scncwdo1_500.gif\",\n          back: \"http://vignette3.wikia.nocookie.net/pokemon/images/d/d8/Squirtle_XY_Back_Sprite.gif/revision/latest?cb=20141031154426\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"bubble\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"water gun\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"shell attack\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"hydro pump\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"bulbasaur\",\n        type: 'grass',\n        weakness: ['fire'],\n        resistance: ['water','psychic'],\n        img: {\n          default: \"http://vignette4.wikia.nocookie.net/pokemon/images/8/81/001Bulbasaur_Pokemon_Mystery_Dungeon_Explorers_of_Sky.png/revision/latest?cb=20150105223818\",\n          front: \"https://media.giphy.com/media/iIWW4BM6nNWTu/giphy.gif\",\n          back: \"http://rs425.pbsrc.com/albums/pp335/Grasaldrea/ShinyBulbasauranimatedback.gif~c200\",\n          deranged: \"http://rs522.pbsrc.com/albums/w348/Richtoon18/b3617568f13aa750c57eacc45d0b2da7.gif~c200\",\n          sleep: \"https://31.media.tumblr.com/4dd7682db26ac687ef81f0dd06794652/tumblr_msesq5uAIk1r93jsro1_500.gif\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"tackle\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"vine whip\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"razor leaf\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"solar beam\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      },\n      {\n        name: \"machop\",\n        type: 'fighting',\n        weakness: ['psychic','electric'],\n        resistance: [],\n        img: {\n          default: \"http://clipart.toonarific.com/data/media/11/pokemon066.gif\",\n          front: \"http://graphics.tppcrpg.net/xy/normal/066F.gif\",\n          back:  \"http://pokeunlock.com/wp-content/uploads/2015/01/machop-2.gif\"\n        },\n        hp: {\n          current: 500,\n          total: 500\n        },\n        attacks: [\n          {\n            name: \"low kick\",\n            hp: randomNum(40,20),\n            avail: {\n              total: 30,\n              remaining: 30\n            }\n          },\n          {\n            name: \"karate chop\",\n            hp: randomNum(60,45),\n            avail: {\n              total: 10,\n              remaining: 10\n            }\n          },\n          {\n            name: \"seismic toss\",\n            hp: randomNum(75,60),\n            avail: {\n              total: 5,\n              remaining: 5\n            }\n          },\n          {\n            name: \"hundred furious punches\",\n            hp: randomNum(160, 130),\n            avail: {\n              total: 2,\n              remaining: 2\n            }\n          }\n        ]\n      }\n    ];\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // UTILITY\n  /////////////////////////////////////////////\n  // RANDOM NUMBER GENERATOR\n  // min is optional\n  function randomNum(max, min){\n    // generate a random number\n  \n    // min not required\n    if(min === undefined || min === '' || min === null){\n      // min default value\n      min = 0;\n    }\n  \n    // random number, yay\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  \n  \n  \n  // CHARACTER BUILD\n  // build the character UI\n  function populateChar(container,character){\n    // which img\n    var facing = 'front';\n    if(character === 'hero'){\n      // we see the back of our hero\n      // a real hero faces danger\n      facing = 'back';\n    }\n  \n    // build the character\n    container.append('<section class=\"char\"><img src=\"'+gameData[character].img[facing]+'\" alt=\"'+gameData[character].name+'\"><aside class=\"data\"><h2>'+gameData[character].name+'</h2><div><progress max=\"'+gameData[character].hp.total+'\"></progress><p><span>'+gameData[character].hp.current+'</span>/'+gameData[character].hp.total+'</p></div></aside></section>');\n  }\n  \n  \n  \n  // ATTACK MULTIPLIER\n  // modify attack value for weaknesses & strengths\n  function attackMultiplier(attacker, curAttack){\n    var defender = 'enemy';\n    if(attacker === 'enemy'){\n      defender = 'hero';\n    }\n  \n    if(gameData[defender].weakness.indexOf(gameData[attacker].type) >= 0){\n      // weakness exists\n      curAttack.hp *= 2;\n    }\n  \n    if(gameData[defender].resistance.indexOf(gameData[attacker].type) >= 0){\n      // weakness exists\n      curAttack.hp /= 2;\n    }\n  \n    curAttack.hp = Math.floor(curAttack.hp);\n    return curAttack.hp;\n  }\n  \n  \n  \n  // SFX PLAYER\n  // stops music and plays sfx\n  function playSound(name){\n    // load sfx src\n    $('audio.sfx').attr('src', music[name])\n    // pause game music\n    $('audio.music')[0].pause();\n    // character announce yourself\n    $('audio.sfx')[0].play();\n  \n    // timeout to stop music at given point\n    setTimeout(function(){\n      // pause the sfx\n      $('audio.sfx')[0].pause();\n      // start the music again\n      $('audio.music')[0].play();\n      // reset the sfx\n      $('audio.sfx')[0].currentTime = 0;\n    },2000);\n  }\n  \n  \n  // HP BAR ANIMATION\n  // stop and set health bar\n  function setHP(){\n    // stop health animation and set value\n    clearInterval(defendProgressInt);\n    clearInterval(progressInt);\n    $('.stadium .enemy progress').val(gameData.enemy.hp.current);\n    $('.stadium .hero progress').val(gameData.hero.hp.current);\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // RESET\n  /////////////////////////////////////////////\n  function resetGame(){\n    // set default values for game variables\n    buildVars();\n  \n    // clear the stadium\n    $('.hero').empty();\n    $('.enemy').empty();\n  \n    // reset\n    $('.attack-list li').unbind('click');\n    $('.attack-list').empty();\n    $('.stadium .enemy').css({'padding':'0'});\n    $('.instructions p').text('Choose your hero');\n  \n    // set & start the opening game music\n    $('audio.music').attr('src',music[\"opening\"]);\n    $('audio.music')[0].play();\n  \n    // empty characters\n    $('.characters').empty();\n    $('.characters').removeClass('hidden');\n  \n    for(var i in characters){\n      // build the character list\n      $(\".characters\").append('<div class=\"char-container\"><img src=\"'+characters[i].img.default+'\" alt=\"'+characters[i].name+'\"><h2>'+characters[i].name+'</h2><span class=\"type '+characters[i].type+'\"></span></div>')\n    }\n    characterChoice();\n  }\n  resetGame();\n  $('.logo').click(function(){resetGame();});\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // CHARACTER CHOICE\n  /////////////////////////////////////////////\n  function characterChoice(){\n    $('.characters .char-container').click(function(){\n      // you have chosen a character\n  \n      // your chosen character name\n      var name = $(this).children('h2').text().toLowerCase();\n  \n      switch(gameData.step){\n        // switch for the current step in the game\n  \n        case 1:\n          // step 1: choose your hero\n          for(var i in characters){\n            if(characters[i].name === name){\n              // find and save your chosen hero's data\n              gameData.hero = characters[i];\n            }\n          }\n  \n          // remove the character from the available list\n          var char = $(this).remove();\n          // build my hero\n          populateChar($('.stadium .hero'), 'hero');\n  \n          for(var i in gameData.hero.attacks){\n            // populate attack list\n            $('.attack-list').append('<li><p class=\"attack-name\"><strong>'+gameData.hero.attacks[i].name+'</strong></p><p class=\"attack-count\"><small><span>'+gameData.hero.attacks[i].avail.remaining+'</span>/'+gameData.hero.attacks[i].avail.total+'</small></p></li>');\n          }\n  \n          $('.attack-list').addClass('disabled');\n  \n          // update instructions\n          $('.instructions p').text('Choose your enemy');\n          // set health bar value\n          $('.stadium .hero progress').val(gameData.hero.hp.current);\n  \n          // let your hero roar\n          playSound(name);\n  \n          // move on to choosing an enemy\n          gameData.step = 2;\n          break;\n  \n        case 2:\n          // step 2: choose your enemy\n          for(var i in characters){\n            if(characters[i].name === name){\n              // find and save the enemy data\n              gameData.enemy = characters[i];\n            }\n          }\n  \n          // remove the enemy from the list\n          var char = $(this).remove();\n          // build the enemy\n          populateChar($('.stadium .enemy'), 'enemy');\n          // pad the stadium - give them some breathing room\n          $('.stadium .enemy').css({'padding':'25px 0'});\n  \n          // update instructions\n          $('.instructions p').text('Fight!!!');\n  \n          // hide the hero list\n          $('.characters').children().slideUp('500', function(){\n            $('.characters').addClass('hidden');\n          });\n  \n          // update enemy health bar value\n          $('.stadium .enemy progress').val(gameData.enemy.hp.current);\n  \n          // the enemy whimpers in fear\n          playSound(name);\n  \n          // update step to attack phase and bind click events\n          gameData.step = 3;\n          attackList();\n          break;\n      }\n    });\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // HERO ATTACK\n  /////////////////////////////////////////////\n  function attackEnemy(that, callback){\n    // attack the enemy!!!\n  \n    // name of your attack\n    attackName = that.children('.attack-name').children('strong').text().toLowerCase();\n  \n    for(var i in gameData.hero.attacks){\n      if(gameData.hero.attacks[i].name === attackName){\n        // get chosen attack data\n        curAttack = gameData.hero.attacks[i];\n      }\n    }\n  \n    // if there are attacks left\n    if(curAttack.avail.remaining > 0){\n      // attack!!!\n      $('.attack-list').addClass('disabled');\n  \n      $('.hero .char img').animate(\n        {\n          'margin-left': '-30px',\n          'margin-top': '10px'\n        },\n        50,\n        'swing'\n      );\n      $('.hero .char img').animate(\n        {\n          'margin-left': '30px',\n          'margin-top': '-10px'\n        },\n        50,\n        'swing'\n      );\n      $('.hero .char img').animate(\n        {\n          'margin-left': '0px',\n          'margin-top': '0px'\n        },\n        50,\n        'swing'\n      );\n  \n      // attack enemy\n      gameData.enemy.hp.current -= attackMultiplier('hero', curAttack);\n  \n      if(gameData.enemy.hp.current <= 0){\n        // Enemy is dead\n  \n        clearModal();\n      $('.modal-in header').append('<h1>You Enemy is slain</h1><span class=\"close\">x</span>');\n      $('.modal-in section').append('<p>Congratulations! Dare you try again?');\n      $('.modal-out').slideDown('400');\n        modalControls();\n  \n        gameData.enemy.hp.current = 0;\n        // clear the stadium of the dead\n        $('.enemy').empty();\n        // show the available characters\n        $('.characters').removeClass('hidden');\n        $('.characters').children().slideDown('500');\n  \n        gameData.enemy = {};\n  \n        // choose enemy\n        gameData.step = 2;\n        // unbind click for reset\n        $('.attack-list li').unbind('click');\n      }else{\n        // enemy is still alive (Attack!!!)\n  \n        // subtract attack\n        curAttack.avail.remaining--;\n  \n        // interval to animate health bar\n        progressInt = setInterval(function(){\n          // get current value of health bar\n          var val = $('.stadium .enemy progress').val();\n          val--;\n  \n          // update health bar value\n          $('.stadium .enemy progress').val(val);\n  \n          if(val === gameData.enemy.hp.current){\n            // if you've hit your target clear interval\n            clearInterval(progressInt);\n            progressComplete = 1;\n          }\n        },1);\n  \n        // update health numbers\n        $('.stadium .enemy .data p span').text(gameData.enemy.hp.current);\n        that.children('.attack-count').children('small').children('span').text(curAttack.avail.remaining);\n  \n        // wait a second to recover\n        setTimeout(function(){\n          // now defend that attack\n          defend(that);\n        }, 1000);\n      }\n    }\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // ENEMY ATTACK (DEFEND)\n  /////////////////////////////////////////////\n  function defend(that){\n    // random attack\n    randInt = randomNum(gameData.enemy.attacks.length);\n    enemyAttack = gameData.enemy.attacks[randInt];\n  \n    // enemy attack animation sequence\n    $('.enemy .char img').animate(\n      {\n        'margin-right': '-30px',\n        'margin-top': '-10px'\n      },\n      50,\n      'swing'\n    );\n    $('.enemy .char img').animate(\n      {\n        'margin-right': '30px',\n        'margin-top': '10px'\n      },\n      50,\n      'swing'\n    );\n    $('.enemy .char img').animate(\n      {\n        'margin-right': '0px',\n        'margin-top': '0px'\n      },\n      50,\n      'swing'\n    );\n  \n    // attack the hero\n    gameData.hero.hp.current -= attackMultiplier('enemy', enemyAttack);\n  \n    if(gameData.hero.hp.current <= 0){\n      // ding dong the hero's dead\n  \n      clearModal();\n      $('.modal-in header').append('<h1>Your Hero has died</h1><span class=\"close\">x</span>');\n      $('.modal-in section').append('<p>You lose, good day!');\n      $('.modal-out').slideDown('400');\n      modalControls()\n  \n      gameData.hero.hp.current = 0;\n  \n      resetGame();\n    }else{\n      // the hero lives\n  \n      // subtract attack from enemy count\n      gameData.enemy.attacks[randInt].avail.remaining--;\n  \n      // health bar animation\n      defendProgressInt = setInterval(function(){\n        // get current val of health bar\n        var val = $('.stadium .hero progress').val();\n        val--;\n  \n        // update health bar value\n        $('.stadium .hero progress').val(val);\n  \n        if(val === gameData.hero.hp.current){\n          // stop the interval when target is attained\n          clearInterval(defendProgressInt);\n          defendProgressComplete = 1;\n        }\n      },1);\n  \n      // update health value\n      $('.stadium .hero .data p span').text(gameData.hero.hp.current);\n  \n      setTimeout(function(){\n        if(defendProgressComplete && progressComplete){\n          $('.attack-list').removeClass('disabled');\n        }else{\n          setHP();\n          $('.attack-list').removeClass('disabled');\n        }\n      }, 500);\n    }\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // ATTACK SEQUENCE\n  /////////////////////////////////////////////\n  function attackList(){\n    // attack instantiation\n    $('.attack-list').removeClass('disabled');\n  \n    $('.attack-list li').click(function(){\n      // attack choice is clicked\n      var doAttack = 1;\n  \n      if(gameData.step === 3){\n        // attack step - start attack sequence\n        attackEnemy($(this));\n      }\n    });\n  \n    setTimeout(function(){\n      // characters chosen - set & start the battle music\n      $('audio.music').attr('src',music[\"battle\"]);\n      $('audio.music')[0].play();\n    },1500);\n  }\n  \n  \n  \n  \n  \n  /////////////////////////////////////////////\n  // MODAL\n  /////////////////////////////////////////////\n  function modalControls(){\n    $('.modal-out').click(function(){\n      $(this).slideUp('400');\n    });\n    $('.modal-in .close').click(function(e){\n      $('.modal-out').slideUp('400');\n    });\n  \n    $('.modal-in').click(function(e){\n      e.stopPropagation();\n      e.preventDefault();\n    });\n  }\n  \n  function clearModal(){\n    $('.modal-in header').empty();\n    $('.modal-in section').empty();\n    $('.modal-in footer').empty();\n    setHP();\n  }\n  });\n*/\n"]},"metadata":{},"sourceType":"module"}