{"ast":null,"code":"import _classCallCheck from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/src/components/attacks/attacks.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { attackType } from 'constants/custom-prop-types';\nimport { playerHit, cpuHit, startAttacks, endAttacks } from 'actions/playerActions';\nimport './attacks.css';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    battle: state.battle,\n    url: state.api.selected.url\n  };\n};\n\nvar Attacks =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Attacks, _React$Component);\n\n  function Attacks() {\n    _classCallCheck(this, Attacks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Attacks).apply(this, arguments));\n  }\n\n  _createClass(Attacks, [{\n    key: \"onClick\",\n    value: function onClick(_ref) {\n      var _this = this;\n\n      var attack = _ref.attack,\n          enabled = _ref.enabled,\n          battle = _ref.battle;\n\n      if (!enabled) {\n        return;\n      }\n\n      this.props.dispatch(startAttacks());\n      var param = {\n        player: {\n          name: battle.player.name,\n          currentHealth: battle.player.currentHealth,\n          attack: attack.name\n        },\n        against: {\n          name: battle.against.name,\n          currentHealth: battle.against.currentHealth\n        }\n      };\n      axios.post(\"\".concat(this.props.url, \"/hit\"), param).then(function (response) {\n        var player = response.data.player;\n        delete player.name;\n        player.attack = attack.name;\n\n        _this.props.dispatch(playerHit(player));\n\n        setTimeout(function () {\n          var against = response.data.against;\n          delete against.name;\n\n          _this.props.dispatch(cpuHit(against));\n\n          _this.props.dispatch(endAttacks());\n        }, 2000);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var battle = this.props.battle;\n      var items = this.props.attacks ? this.props.attacks : this.props.isCpu ? battle.against.attacks : battle.player.attacks;\n      var enabled = this.props.isCpu !== true && battle.started && !battle.onAttack;\n      var attacks = !items ? [] : items.map(function (attack, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick(i) {\n            _this2.onClick({\n              attack: attack,\n              enabled: enabled,\n              battle: battle\n            });\n          },\n          className: enabled ? \"list-group-item attack-click\" : \"list-group-item\",\n          title: enabled ? 'Click to trigger attack' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"attack-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, attack.name, \":\"), React.createElement(\"span\", {\n          title: \"Type\",\n          className: \"label label-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, attack.type), React.createElement(\"span\", {\n          className: \"label label-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Power: \", attack.power), React.createElement(\"span\", {\n          title: \"Accuracy\",\n          className: \"label label-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Acc.: \", attack.accuracy));\n      });\n      return React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        title: \"Attacks\",\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, attacks));\n    }\n  }]);\n\n  return Attacks;\n}(React.Component);\n\nAttacks.propTypes = {\n  isCpu: PropTypes.bool,\n  attacks: PropTypes.arrayOf(attackType)\n};\nexport default connect(mapStateToProps)(Attacks);","map":{"version":3,"sources":["/Users/nicholasmahase/Desktop/Project 3/SuperPokeSmash/super-poke-smash/client/src/components/attacks/attacks.js"],"names":["React","PropTypes","connect","axios","attackType","playerHit","cpuHit","startAttacks","endAttacks","mapStateToProps","state","battle","url","api","selected","Attacks","attack","enabled","props","dispatch","param","player","name","currentHealth","against","post","then","response","data","setTimeout","items","attacks","isCpu","started","onAttack","map","index","i","onClick","type","power","accuracy","Component","propTypes","bool","arrayOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {attackType} from 'constants/custom-prop-types';\nimport {playerHit, cpuHit, startAttacks, endAttacks} from 'actions/playerActions'\nimport './attacks.css';\n\nconst mapStateToProps = (state) => ({ battle: state.battle, url: state.api.selected.url });\n\nclass Attacks extends React.Component { \n\n\tonClick({attack, enabled, battle}){\n\t\tif (!enabled) { return } \n\n\t\tthis.props.dispatch(startAttacks());\t\n\n\t\tlet param = {\n\t\t    player : {\n\t\t        name : battle.player.name,\n\t\t        currentHealth : battle.player.currentHealth,\n\t\t        attack : attack.name\n\t\t    },\n\t\t    against : {\n\t\t        name : battle.against.name,\n\t\t        currentHealth : battle.against.currentHealth\n\t\t    }\n\t\t}\n\n\t\taxios.post(`${this.props.url}/hit`, param).then(response => {\n\n\t\t\tlet player = response.data.player;\n\t\t\tdelete player.name;\n\t\t\tplayer.attack = attack.name;\n\t\t\tthis.props.dispatch(playerHit(player));\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet against = response.data.against;\n\t\t\t\tdelete against.name;\n\t\t\t\tthis.props.dispatch(cpuHit(against));\n\t\t\t\tthis.props.dispatch(endAttacks());\n\t\t\t}, 2000)\n\t\t});\t\n\t}\n\n\trender() {\n\t\tlet battle = this.props.battle;\n\t\tlet items = this.props.attacks ? this.props.attacks : (this.props.isCpu ? battle.against.attacks : battle.player.attacks);\n\t\tlet enabled = this.props.isCpu !== true && battle.started && !battle.onAttack;\n\n\t    const attacks = !items ? [] : items.map((attack, index) => (\n\t      <li \n\t      \tkey={index} \n\t      \tonClick={i=>{this.onClick({attack, enabled, battle})}} \n\t      \tclassName={enabled ? \"list-group-item attack-click\" : \"list-group-item\"} \n\t      \ttitle={enabled ? 'Click to trigger attack' : ''} >\n\t        \n\t        <span className=\"attack-name\">{attack.name}:</span>\n\t        <span title=\"Type\" className=\"label label-default\">{attack.type}</span>\n\t        <span className=\"label label-danger\">Power: {attack.power}</span>\n\t        <span title=\"Accuracy\" className=\"label label-warning\">Acc.: {attack.accuracy}</span>\n\t      \n\t      </li>\n\t    ));\n\n\t    return(<div className=\"caption\"><ul title=\"Attacks\" className=\"list-group\">{attacks}</ul></div>)\n\t}\n}\n\nAttacks.propTypes = {\n  isCpu: PropTypes.bool,\n  attacks: PropTypes.arrayOf(attackType)\n};\n\nexport default connect(mapStateToProps)(Attacks);\n\n\n\n"]},"metadata":{},"sourceType":"module"}